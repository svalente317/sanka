// -*- mode: Java; -*-
package sanka.test;

class Globals {
    static String[] RESULTS;
}

abstract class AbstractClass {
    void addOne() {
        Globals.RESULTS.add("1");
    }

    void addTwo();
    void addThree();
}

abstract class MiddleClass extends AbstractClass {
    void addTwo() {
        Globals.RESULTS.add("2");
    }
}

class ConcreteClass extends MiddleClass {
    void addThree() {
        Globals.RESULTS.add("3");
    }
}

class VeryConcreteClass extends MiddleClass {
    void addOne() {
        Globals.RESULTS.add("1a");
    }

    void addThree() {
        Globals.RESULTS.add("3a");
    }

    boolean getTrue() {
        return true;
    }
}

class AbstractClassTest extends BaseTest {
    void testAbstractClass() {
        Globals.RESULTS = new String[];

        var o = new ConcreteClass();
        o.addOne();
        o.addTwo();
        o.addThree();

        var o2 = new VeryConcreteClass();
        o2.addOne();
        o2.addTwo();
        o2.addThree();

        var expected = {"1", "2", "3", "1a", "2", "3a"};
        for (var idx = 0; idx < expected.length; idx++) {
            if (Globals.RESULTS[idx] != expected[idx]) {
                assertString(expected[idx], Globals.RESULTS[idx],
                             "value at idx=" + idx);
            }
        }
        /*
        var a = getVeryConcrete();
        var t = ((VeryConcreteClass) a).getTrue();
        assert(t);
        */
    }

    AbstractClass getVeryConcrete() {
        return new VeryConcreteClass();
    }

    static int main(String[] argv) {
        var test = new AbstractClassTest();
        test.testAbstractClass();
        return test.exit();
    }
}
